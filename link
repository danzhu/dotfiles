#!/bin/bash

OPTIONS=df
LONG_OPTIONS=dry,force

OPT=$(getopt --options=$OPTIONS --longoptions=$LONG_OPTIONS --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
    exit 2
fi

eval set -- "$OPT"

while true; do
    case "$1" in
        -d|--dry)
            DRY=true
            shift
            ;;
        -f|--force)
            FORCE=true
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "oops"
            exit 3
            ;;
    esac
done

if [[ $# -ne 0 ]]; then
    echo "$0: selective linking not yet supported"
    exit 2
fi

function msg() {
    tput bold
    tput setaf $1
    echo -en " $2"
    tput sgr0
}

function link() {
    local tar="$PWD/$2"
    local src="$HOME/$1"

    printf "%-20s" "$1"

    if [[ ! -e "$tar" ]]; then
        msg 1 "symlink target $tar not found\n"

        return 0
    elif [[ -L "$src" ]]; then
        local sym="$(readlink "$src")"

        if [[ "$tar" = "$sym" ]]; then
            msg 8 "already linked\n"

            return 0
        elif [[ $FORCE != true ]]; then
            msg 3 "linked to $sym\n"

            return 0
        else
            msg 4 "forced symlink override"
        fi
    elif [[ -e "$src" ]]; then
        if [[ $FORCE != true ]]; then
            msg 3 "file exists\n"

            return 0
        else
            msg 4 "forced file override"
        fi
    fi

    if [[ $DRY = true ]]; then
        msg 2 "will be"
    else
        mkdir -p "$(dirname "$src")"
        if [[ $FORCE = true ]]; then
            ln -sf "$tar" "$src"
        else
            ln -s "$tar" "$src"
        fi

        msg 2 "successfully"
    fi

    msg 2 "linked\n"
}

link .Xresources      xorg/Xresources
link .bash_profile    bash/bash_profile
link .bashrc          bash/bashrc
link .clang-format    clang/clang-format
link .clang-tidy      clang/clang-tidy
link .clang_complete  clang/clang_complete
link .config/git      git
link .config/i3       i3
link .config/i3status i3status
link .config/nvim     vim
link .config/termite  termite
link .config/zathura  zathura
link .emacs.d         emacs
link .flake8          flake8/flake8
link .inputrc         readline/inputrc
link .npmrc           npm/npmrc
link .pylintrc        pylint/pylintrc
link .ssh             ssh
link .tern-config     tern/tern-config
link .tmux            tmux
link .tmux.conf       tmux/tmux.conf
link .vim             vim
link .vimrc           vim/init.vim
link .xinitrc         xorg/xinitrc
link .xprofile        xorg/xprofile
link .zprofile        zsh/zprofile
link .zshenv          zsh/zshenv
link .zshrc           zsh/zshrc
