# --- global options ---
set -g mouse on
set -g focus-events on
set -g set-titles on
set -g set-titles-string '#T'
set -g default-terminal 'tmux-256color'
set -g history-limit 10000
set -g display-time 3000
set -g default-command "${SHELL}"

# --- server options ---
set -s escape-time 0

# --- widows options ---
setw -g mode-keys vi
setw -g automatic-rename on
setw -g aggressive-resize on
setw -g base-index 1
setw -g pane-base-index 1

# --- status ---
set -g status-left '#{?client_prefix,#[reverse],} #S '
set -g status-right ' %b %d | %l:%M %p '
set -g status-style bg=colour0
set -g status-left-length 20
set -g status-right-length 20
set -g status-left-style fg=white,bold,bg=colour8
set -g status-right-style fg=white,bold,bg=colour8
set -g message-style bg=colour0
set -g message-command-style fg=colour7,bg=colour0
setw -g window-status-format " #I: #W#{?window_flags,#{window_flags}, } "
setw -g window-status-current-format " #I: #W#{?window_flags,#{window_flags}, } "
setw -g window-status-separator ''
setw -g window-status-fg colour7
setw -g window-status-current-fg colour12
setw -g mode-style fg=black,bold,bg=colour12
setw -g pane-border-style fg=colour7
setw -g pane-active-border-style fg=colour12

# --- key bindings ---
bind C-b send-prefix
bind b last-window

bind C-v split-window -h -c "#{pane_current_path}"
bind C-s split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind e split-window -bh -c "#{pane_current_path}" $EDITOR

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind C-p previous-window
bind C-n next-window
unbind n

bind R source-file ~/.tmux.conf

bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\ select-pane -l
bind C-l send 'C-l'
