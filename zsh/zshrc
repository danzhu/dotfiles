# --- basic settings ---
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory histignorealldups sharehistory
setopt extendedglob
setopt autocd autopushd pushdsilent
setopt noprompt_sp
bindkey -e


# --- autoload ---
autoload -Uz compinit
compinit

zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' glob 1
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]} r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' rehash true
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion::*:(rm|vim):*' ignore-line true

autoload -Uz add-zsh-hook

autoload -Uz chpwd_recent_dirs cdr
add-zsh-hook chpwd chpwd_recent_dirs

autoload -Uz run-help
unalias run-help 2> /dev/null
alias help='run-help'


# --- key bindings ---
function rationalise-dot() {
    if [[ $LBUFFER = *.. ]]; then
        LBUFFER+=/..
    else
        LBUFFER+=.
    fi
}
zle -N rationalise-dot
bindkey . rationalise-dot

bindkey ' ' magic-space

# WORDCHARS=''


# --- shell prompt ---
function prompt-print() {
    local code=$?
    print ''

    if [[ $code -ne 0 ]]; then
        print -P "%1F%K %k %B$code%b%f"
    fi

    print -nP '%B%K'
    if [[ $UID -eq 0 ]]; then
        # root
        print -nP ' %1F%m%f'
    elif [[ -n "$SSH_CONNECTION" ]]; then
        # ssh
        print -nP ' %m'
    fi

    # path
    print -nP ' %k %4F%~%f'

    # git prompt
    local gs
    if gs="$(git status --porcelain=v2 --branch 2> /dev/null)"; then
        local branch="$(prompt-grab "$gs" '# branch\.head (.*)')"

        print -nP ' %K '

        if [[ "$branch" = '(detached)' ]]; then
            # detached head
            print -nP "%3F$(git rev-parse --short HEAD)%f"
        elif [[ -f "$(git rev-parse --git-dir)/MERGE_HEAD" ]]; then
            # merging
            print -nP "%1F$branch%f"
        elif echo "$gs" | grep -qE '^# branch\.upstream .*$'; then
            # has upstream
            print -nP "%5F$branch%f"

            prompt-diverge "$gs" '# branch\.ab \+(.*) -.*' '%2F+'
            prompt-diverge "$gs" '# branch\.ab \+.* -(.*)' '%3F-'
        else
            # local branch
            print -nP "%2F$branch%f"
        fi

        print -nP " %k"

        # added
        prompt-count "$gs" '^[12] [MADRCU].' '%2F+'
        # changed
        prompt-count "$gs" '^[12] .[MADRCU]' '%3F~'
        # unmerged
        prompt-count "$gs" '^u' '%1F!'
        # untracked
        prompt-count "$gs" '^\?' '%6F?'
    fi

    print -P '%b'
}
add-zsh-hook precmd prompt-print

function prompt-grab() {
    echo "$1" | sed -nE "s/^$2\$/\\1/p"
}

function prompt-diverge() {
    local count="$(prompt-grab "$1" "$2")"
    if [[ $count -ne 0 ]]; then
        print -nP " $3$count%f"
    fi
}

function prompt-count() {
    local count
    if count="$(echo "$1" | grep -cE "$2")"; then
        print -nP " $3$count%f"
    fi
}

PS1='%K %k '
PS2='%K%7F %(1_.%_.>) %f%k '


# --- syntax highlighting ---
HL=/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
if [[ -f "$HL" ]]; then
    ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
    source "$HL"
fi
unset HL


# --- zsh-specific aliases ---
alias -s cc=vim
alias -s h=vim

alias -g G='| grep'
alias -g L='| less'


# --- common ---
source ~/.dotfiles/common/aliases
source ~/.dotfiles/common/functions
